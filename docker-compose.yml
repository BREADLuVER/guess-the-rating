# docker-compose.yml

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - guess-the-rating-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/staticfiles:/app/staticfiles
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - guess-the-rating-network

  backend:
    build: ./backend
    command: gunicorn guess_the_rating.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - ./backend/staticfiles:/app/staticfiles
    env_file:
      - ./backend/.env
    depends_on:
      - db
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 2G
    networks:
      - guess-the-rating-network
    environment:
      - DJANGO_SETTINGS_MODULE=guess_the_rating.settings.prod
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    command: npx serve -s build
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_BACKEND_URL=http://backend:8000
      - NODE_OPTIONS=--max-old-space-size=8192
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 2G
    networks:
      - guess-the-rating-network
    ports:
      - "3000:3000"

networks:
  guess-the-rating-network:
    driver: bridge
    name: guess-the-rating-network

volumes:
  postgres_data: